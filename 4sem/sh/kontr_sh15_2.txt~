\begin{center}
\bf
``Программирование в Shell: Контрольная работа \No~2''
\end{center}

\begin{enumerate}
\item
Какие права будут установлены для файла {\tt test.txt} в результате выполнения команды:
\\
а) {\tt chmod 731 test.txt} \\
б) {\tt chmod 735 test.txt} \\
в) {\tt chmod 740 test.txt} \\
г) {\tt chmod 321 test.txt} \\
д) {\tt chmod 041 test.txt} 
\item 
Что произойдет в результате выполнения команды:
\\
\verb|chmod -R 640 ~/*|?
\\
Как это исправить?
\item 
Что произойдет в результате выполнения команды в домашней директории пользователя:
\\
а) \verb|ln -s /home/user/asd/test/tmp ~/temp|
\\
б) \verb|ln -s /home/user/asd/test/tmp|
\item (Фахрия)
Что произойдет в результате выполнения команд?
\begin{verbatim}
SOURCE_COUNT=13
DEST_COUNT=15
[ "$DEST_COUNT" -gt "$SOURCE_COUNT" ]
echo $?
\end{verbatim}
\item (Фахрия)
Для каких целей может использоваться выражение
\verb|expr rr + 1|?
\item (Фахрия)
Вы обнаружили некоторый файл сценария:
\begin{verbatim}
#!/bin/sh
if grep 'stud\>' /log/activ.log > /dev/null 2>&1
then
echo "Yes"
else
echo "No"
fi
\end{verbatim}
Что он делает?
\item (Нармина)
Для чего предназначена следующая команда?
\begin{verbatim}
$ grep -c 'stud\>' /log/activ.log
\end{verbatim}
\item (Нармина)
В чем отличие выполнения команд:
\begin{verbatim}
$ echo `hello`
$ echo `date`
\end{verbatim}
\item
Вы запустили сценарий, предусматривающий установку нескольких пакетов с использованием утилиты \verb|yum|.
К сожалению, запуск \verb|yum| оказался заблокированным \verb|PackageKit| (он срочно решил что-то обновить).
Обновление пакетов у вас предусмотрено в процессе выполнения сценария.
Как можно разблокировать выполнение вашего сценария?
\item
При первоначальной настройке вашего Fedora--сервера первой командой рекомендуется использовать:\\
\verb|yum install yum-fastestmirror -y|
\\
И только после этого произволить обновление системы и установку других пакетов. Почему?
\item
имеется командный файл \verb|test_in1|.
\begin{verbatim}
#!/bin/sh
# test_in1
echo "Введи фамилию и имя"
read name1 name2
echo $name2 $name1
\end{verbatim}
В процессе работы с этим файлом 
было выполнено:
\begin{verbatim}
$ ./test_in1
Введи фамилию и имя
aaa bb cccc
\end{verbatim}
Что будет выведено на экран? Почему?
\item
Каков будет результат работы следующей команды?
\begin{verbatim}
$ > q.qq.qqq
\end{verbatim}
\item
Что это обозначает?
\begin{verbatim}
cp in.txt /dev/null || { echo "???"; exit 1; }
\end{verbatim}
\item 
(Ляман)
Начинающий программист написал некоторый сценарий: 
\begin{verbatim}
#!/bin/sh
# test_in2
for files in `ls *.txt`
do
sed "/^$/d" $files>$files.log
mv $files.log $files
done
\end{verbatim}
Для чего он предназначен? В чем ошибка?
Как ее исправить?
\item (Камилла)
Имеется файл \verb|spis.txt| со следующей информацией:
\begin{verbatim}
Elly	18	F	Math.	France
Tom	19	M	Psi.	UK
Lila	18	F	Phil.	Germany
. . .	..	..	.....
\end{verbatim}
и файл \verb|exam.txt| со следующей информацией:
\begin{verbatim}
Elly	5
Tom	3
Lila	4
. . .	..
\end{verbatim}
Первые поля в этих файлах общие.
Как объеденить информацию из этих файлов файле \verb|all_inf.txt|?
\item (Татьяна)\\
Вы решили начать новую компьютерную жизнь! 
Вам надоел обезличенный пользователь \verb|student|.
Вы решили завести нового пользователя \verb|studentik|.
Впрочем часть файлов вы решили сохранить \ldots
Какие действия необходимо предпринять для реализации этой задумки?
\item
Один нехороший человек добрался до вашего компьютера и в конец файла
\verb|.bash_profile| (Fedora) или \verb|.profile| (Ubuntu)
вставил строку\\ \verb|reboot| \\
Чем это вам грозит?	
\item
Один пользователь в файл 
\verb|.bash_logout| 
вставил строку
\\
\verb|rm -rf $HOME/*~|\\
Что при этом будет происходить?
\item
Другой нехороший человек в файл 
\verb|.bash_logout| 
вставил строку
\\
\verb|rm -rf $HOME/*| \\
Что при этом будет происходить?
\end{enumerate}

